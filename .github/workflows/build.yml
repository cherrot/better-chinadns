name: Build for release

on:
  release:
    types: [created]
  workflow_dispatch:
  
jobs:

  build:
    name: Build 
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Set up gox
      run: go get github.com/mitchellh/gox

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go mod download

    - name: Test
      run: go test -v ./...

    - name: Build
      working-directory: cmd/chinadns
      env:
        build_os: "windows linux"
        build_arch: "amd64 386 arm arm64 mips mips64 mipsle mips64le"
        build_osarch: "darwin/amd64"
      run: gox -ldflags "-s -w -X github.com/cherrot/gochinadns.version=${GITHUB_REF#refs/*/}" -verbose -os="$build_os" -arch="$build_arch" -osarch="$build_osarch" -output="chinadns-{{.OS}}-{{.Arch}}-${GITHUB_REF#refs/*/}"

    - uses: actions/upload-artifact@v2
      with:
        name: binaries-linux
        path: cmd/chinadns/chinadns-linux-*

    - uses: actions/upload-artifact@v2
      with:
        name: binaries-windows
        path: cmd/chinadns/chinadns-windows-*

    - uses: actions/upload-artifact@v2
      with:
        name: binaries-darwin
        path: cmd/chinadns/chinadns-darwin-*

  upx-compress:
    needs: [build]
    name: UPX compress for embedded architectures
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm,arm64,mips,mipsle]
      max-parallel: 4
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: binaries-linux

      - run: mkdir mini
      - run: chmod +x chinadns-*

      # GITHUB_REF isn't callable as an action input, so we do this workaround instead to save it as a context variable
      - name: Extract branch name
        id: extract_branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/*/})"

      - uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          file: chinadns-linux-${{ matrix.arch }}-${{ steps.extract_branch.outputs.branch }}
          args: -o mini/chinadns-linux-${{ matrix.arch }}-mini-${{ steps.extract_branch.outputs.branch }}

      - uses: actions/upload-artifact@v2
        with:
          name: binaries-linux-mini
          path: mini/*

  release:
    name: Add binaries to release
    if: github.event_name == 'release' && github.event.action == 'created' #only run if a release was created
    needs: [upx-compress]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: binaries-linux

      - uses: actions/download-artifact@v2
        with:
          name: binaries-linux-mini

      - uses: actions/download-artifact@v2
        with:
          name: binaries-windows

      - uses: actions/download-artifact@v2
        with:
          name: binaries-darwin

      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: 'chinadns-*'
